[{"C:\\challenge-frontend-jr\\src\\index.tsx":"1","C:\\challenge-frontend-jr\\src\\App.tsx":"2","C:\\challenge-frontend-jr\\src\\styles\\global.ts":"3","C:\\challenge-frontend-jr\\src\\routes\\index.tsx":"4","C:\\challenge-frontend-jr\\src\\pages\\Dashboard\\index.tsx":"5","C:\\challenge-frontend-jr\\src\\pages\\Dashboard\\styles.ts":"6","C:\\challenge-frontend-jr\\src\\services\\api.ts":"7","C:\\challenge-frontend-jr\\src\\components\\Header\\index.tsx":"8","C:\\challenge-frontend-jr\\src\\components\\Header\\styles.ts":"9","C:\\challenge-frontend-jr\\src\\components\\Modal\\index.tsx":"10","C:\\challenge-frontend-jr\\src\\components\\Input\\index.tsx":"11","C:\\challenge-frontend-jr\\src\\components\\Input\\styles.ts":"12","C:\\challenge-frontend-jr\\src\\pages\\Welcome\\index.tsx":"13","C:\\challenge-frontend-jr\\src\\pages\\Welcome\\styles.ts":"14","C:\\challenge-frontend-jr\\src\\components\\Car\\index.tsx":"15","C:\\challenge-frontend-jr\\src\\components\\Car\\styles.ts":"16","C:\\challenge-frontend-jr\\src\\components\\ModalAddCar\\index.tsx":"17","C:\\challenge-frontend-jr\\src\\components\\ModalEditCar\\index.tsx":"18","C:\\challenge-frontend-jr\\src\\components\\ModalAddCar\\styles.ts":"19","C:\\challenge-frontend-jr\\src\\components\\ModalEditCar\\styles.ts":"20"},{"size":198,"mtime":1611266132545,"results":"21","hashOfConfig":"22"},{"size":293,"mtime":1611266131125,"results":"23","hashOfConfig":"22"},{"size":460,"mtime":1611367970053,"results":"24","hashOfConfig":"22"},{"size":356,"mtime":1611267523053,"results":"25","hashOfConfig":"22"},{"size":3235,"mtime":1611367081359,"results":"26","hashOfConfig":"22"},{"size":1106,"mtime":1611368024204,"results":"27","hashOfConfig":"22"},{"size":116,"mtime":1611266146412,"results":"28","hashOfConfig":"22"},{"size":626,"mtime":1611366942586,"results":"29","hashOfConfig":"22"},{"size":977,"mtime":1611368610909,"results":"30","hashOfConfig":"22"},{"size":1047,"mtime":1611367163923,"results":"31","hashOfConfig":"22"},{"size":1352,"mtime":1611366961083,"results":"32","hashOfConfig":"22"},{"size":823,"mtime":1611367645684,"results":"33","hashOfConfig":"22"},{"size":636,"mtime":1611269083105,"results":"34","hashOfConfig":"22"},{"size":1155,"mtime":1611269983785,"results":"35","hashOfConfig":"22"},{"size":2423,"mtime":1611366928583,"results":"36","hashOfConfig":"22"},{"size":2840,"mtime":1611362753529,"results":"37","hashOfConfig":"22"},{"size":1970,"mtime":1611367009323,"results":"38","hashOfConfig":"22"},{"size":1935,"mtime":1611367044836,"results":"39","hashOfConfig":"22"},{"size":1496,"mtime":1611363340026,"results":"40","hashOfConfig":"22"},{"size":1496,"mtime":1611363346681,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"z2kxbu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\challenge-frontend-jr\\src\\index.tsx",[],["85","86","87","88","89"],"C:\\challenge-frontend-jr\\src\\App.tsx",[],"C:\\challenge-frontend-jr\\src\\styles\\global.ts",[],"C:\\challenge-frontend-jr\\src\\routes\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\pages\\Dashboard\\index.tsx",["90"],"import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\n\nimport api from '../../services/api';\n\nimport Car from '../../components/Car';\nimport ModalAddCar from '../../components/ModalAddCar';\nimport ModalEditCar from '../../components/ModalEditCar';\n\nimport { CarsContainer, CarsHeader } from './styles';\n\ninterface ICar {\n  id: number;\n  licensePlate: string;\n  servicesPerformed: string;\n  schedulingDate: string;\n  executionDate: string;\n  available: boolean;\n}\n\nconst Dashboard: React.FC = () => {\n  const [cars, setCars] = useState<ICar[]>([]);\n  const [editingCar, setEditingCar] = useState<ICar>({} as ICar);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function loadCars(): Promise<void> {\n      const response = await api.get('/cars');\n\n      setCars(response.data);\n    }\n\n    loadCars();\n  }, []);\n\n  async function handleAddCar(\n    car: Omit<ICar, 'id' | 'available'>,\n  ): Promise<void> {\n    try {\n      const {\n        licensePlate,\n        servicesPerformed,\n        schedulingDate,\n        executionDate,\n      } = car;\n\n      const response = await api.post('/cars', {\n        licensePlate,\n        servicesPerformed,\n        schedulingDate,\n        executionDate,\n        available: false,\n      });\n\n      if (response) {\n        setCars([...cars, response.data]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateCar(\n    car: Omit<ICar, 'id' | 'available'>,\n  ): Promise<void> {\n    const response = await api.put(`/cars/${editingCar.id}`, {\n      ...car,\n      available: editingCar.available,\n    });\n\n    const findIndexCars = cars.findIndex((carFindFilter) => {\n      return editingCar.id === carFindFilter.id;\n    });\n\n    if (response) {\n      cars[findIndexCars] = response.data;\n      setCars([...cars]);\n    }\n  }\n\n  async function handleDeleteCar(id: number): Promise<void> {\n    await api.delete(`/cars/${id}`);\n\n    const newCars = cars.filter((car) => {\n      return car.id !== id;\n    });\n    setCars(newCars);\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditCar(car: ICar): void {\n    setEditingCar(car);\n    toggleEditModal();\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddCar\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddCar={handleAddCar}\n      />\n      <ModalEditCar\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingCar={editingCar}\n        handleUpdateCar={handleUpdateCar}\n      />\n\n      <CarsHeader>\n        <span>Serviço</span>\n        <span>Data de Execução</span>\n        <span>Data de Agendamento</span>\n        <span>Placa</span>\n      </CarsHeader>\n\n      <CarsContainer>\n        {cars &&\n          cars.map((car) => (\n            <Car\n              key={car.id}\n              car={car}\n              handleDelete={handleDeleteCar}\n              handleEditCar={handleEditCar}\n            />\n          ))}\n      </CarsContainer>\n    </>\n  );\n};\n\nexport default Dashboard;\n","C:\\challenge-frontend-jr\\src\\pages\\Dashboard\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\services\\api.ts",[],"C:\\challenge-frontend-jr\\src\\components\\Header\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\components\\Header\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\components\\Modal\\index.tsx",["91"],"import React, { useState, useEffect } from 'react';\n\nimport ReactModal from 'react-modal';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  setIsOpen: () => void;\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <ReactModal\n      shouldCloseOnOverlayClick={!false}\n      onRequestClose={setIsOpen}\n      isOpen={modalStatus}\n      ariaHideApp={false}\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          background: '#F0F0F5',\n          color: '#000000',\n          borderRadius: '8px',\n          width: '736px',\n          border: 'none',\n        },\n        overlay: {\n          backgroundColor: '#121214e6',\n        },\n      }}\n    >\n      {children}\n    </ReactModal>\n  );\n};\n\nexport default Modal;\n","C:\\challenge-frontend-jr\\src\\components\\Input\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\components\\Input\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\pages\\Welcome\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\pages\\Welcome\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\components\\Car\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\components\\Car\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\components\\ModalAddCar\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\components\\ModalEditCar\\index.tsx",[],"C:\\challenge-frontend-jr\\src\\components\\ModalAddCar\\styles.ts",[],"C:\\challenge-frontend-jr\\src\\components\\ModalEditCar\\styles.ts",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":61,"column":7,"nodeType":"104","messageId":"105","endLine":61,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":6,"column":13,"nodeType":"108","messageId":"109","endLine":6,"endColumn":16,"suggestions":"110"},"lines-around-directive",["111"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["112","113"],"padding-line-between-statements",{"messageId":"114","fix":"115","desc":"116"},{"messageId":"117","fix":"118","desc":"119"},"suggestUnknown",{"range":"120","text":"121"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"120","text":"122"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[128,131],"unknown","never"]